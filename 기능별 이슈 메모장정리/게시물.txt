게시물 entity 속성 
게시글 idx , 제목 postTitle , 가격 postPrice , PostStartDate , postEndDate , description

게시물속 사진 여러장받기 (최대 5장)

이두개가 정상작동후에는 위치서비스받기 , 소셜로그인 도입 , https 도입과 DB세팅


-
테이블에 postPhotoPath라는 게시글 사진경로의값이 list로저장되면 하나의 엔티티에 사진경로 속성에 여러개의 사진경로가 저장되어야하는데 이부분에대한 해결방법이 필요하다 . 

클라이언트에서 여러 장의 사진 파일을 업로드하면 서버에서 이를 처리하여 특정 디렉토리에 저장하고
파일 경로를 생성하여 PostEntity의 postPhotoPaths 필드에 저장한다. 
이후 JPA는 @ElementCollection과 @CollectionTable을 사용해 새로운 테이블(post_photos)을 생성하며, 
게시글 IDX(postIdx)를 참조하여 각 사진 경로를 별도의 행으로 저장한다
-

게시글포스트를할때 기본이미지를 사용할것인지 , 이미지를 첨부안했을시에는 어떻게 처리할것인지에대한 회의필요 .. 일단 필수적으로 사진을 넣는것으로 테스트진행. 



List형식의 사진파일 1~4개 필수적으로 전송받기 , 
dto에는 회원가입때처럼 
제목 , startDate(대여시작시간 ) , endDate(대여종료시간) , 가격  , description 를 Json객체로 넘겨받기 .

Todo 

사진파라미터는 필수적으로 받게되어있다 , 사진을 업로드하지않았을시에 사진을 등록해주세요 라는 에러메세지를 반환해야한다 .
@RequestPart requered= false 로 수정 후 service계층에서 조건문을통한 postPhotos ==null 일시의 예외메세지 반환 , 전역예외처리 사용or service계층에서 return을 통한 예외메세지 반환 둘중하나 선택 , 

postUploads service 클래스 작성하기 ( 사진 공통저장로직구현 )
postman으로 테스트완료시키기 .
config 파일에서 모든오류가 401로 나오고있다 , 403에러만을 401로 반환하게끔 수정해보자 .
로그인사용자만이 이 postUploads에 요청권한을 가지고있다 . 그부분에대해 공부하자 .


//// 로그아웃 오류 : 로그아웃시 새로고침되며 메인페이지로 이동해야 클라이언트메모리초기화 (  리프레시토큰(쿠키)은 서버에서 삭제됨 ) 가되지만 새로고침이되지않아서 회원가입이나 마이페이지에서 로그아웃시
로그인을 해야만 접근할수있는 마이페이지에 계속 머무르게되고 마이페이지에 프로필사진이 기본미리보기사진이 아닌 로그아웃을 요청한 사용자의 사진이 남아있거나 , 회원가입컴포넌트에도 사용자의 사진이 남아있다 . 
엑세스토큰도 남아있을가능성이 크다 . 새로고침이 되게끔 수정해야한다 .




사진 저장 - 사진경로도출(arrayList) - dto -> entity변환 - entity에 사진경로와 user set - postRepository에저장 -> 저장완료메세지반환  



전송해야할 Json :

{
"postTitle":"테스트입니다 .",
"postPrice":"120000",
"postStartDate":" ",
"postEndDate":" ",
"description" : " 설명 테스트"
}


config수정후 사진테스트 , 사진테스트 후 API명세서 작성 , 


config 수정완료 , 사진테스트중 415에러발생 , 포스트맨에서나 리액트에서나 같은에러가 나기때문에 리액트로해도될듯 ㅅㅂ 


1 로그아웃 오류 : 로그아웃시 새로고침되며 메인페이지로 이동해야 클라이언트메모리초기화 (  리프레시토큰(쿠키)은 서버에서 삭제됨 ) 가되지만 새로고침이되지않아서 회원가입이나 마이페이지에서 로그아웃시
로그인을 해야만 접근할수있는 마이페이지에 계속 머무르게되고 마이페이지에 프로필사진이 기본미리보기사진이 아닌 로그아웃을 요청한 사용자의 사진이 남아있거나 , 회원가입컴포넌트에도 사용자의 사진이 남아있다 . 
엑세스토큰도 남아있을가능성이 크다 . 새로고침이 되게끔 수정해야한다 .

2. 사진업로드 API는 끝난거같은데 포스트맨이나 , 리액트에서 둘다 사진업로드가 안되는중.. 일단 제목 , 가격 , 대여시작날짜 , 대여종료날짜 , 설명 과 사진여러장을 폼데이터객체에 넣어줘야함 .

포스트맨에서는 사진등록가능 application/Json content-type 명시해줬더니 정상작동 . 리액트도 동일하게 formdata 인스턴스 header에 컨텐트타입 명시하면 될거같음 .

회원가입시에 이메일인증이 정확히 이루어지지않았음에도 회원가입이 정상적으로 되던오류해결 .
이건해결   
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

프로필사진 수정,기본이미지 변경시 기존사진 삭제되는 삭제메서드 활용해보기 ,  기본이미지로 변경했을경우 null을제외한값을 리액트의 
db설계


@creationDate  (resistationDate) null 로나오는이유 찾기 , 
로그인했을때는 왜 403이떴는지 이유찾기 .

put / delete / getByIdx () / 쿼리쓰기 / 위치 / 소셜로그인 / 채팅 . 


PutMapping 작업 

게시글 수정요청시에 , idx를통해서 게시글 조회가 가능해야함 .

idx를 매개변수로 repository에서 게시글을 찾아옴 -> 조건문을 통한 사진이 있을때와 없을때의 로직구현 , 
title , description , startDate , endDate 를 찾아온 게시글엔티티에 set -> repository.save() -> 성공메세지 반환. 
// 수정날짜 자동갱신 추가했음 .
글을 작성한시간과 , 수정된날짜를 모두 보여줄수있게 클라이언트는 처리해야할것같다 .

postPhotos가 있을떄 :  새로운 사진파일 저장로직과 postPhotoPath 업데이트로직 
없을때 : 기존 엔티티의 postPhotoPath 저장 .

사진을 수정하지않았을떄와 사진을 수정했을떄
예외에대한 경우의수 체크 

postman 을통해서 할 테스트 

1: 사진을 넣었을때에 대한 수정 , 
2: 사진을 넣지않았을때에 대한 수정 .

모두성공 .



수정시에 기존 경로에있는 사진 삭제하는 로직추가 .
@UpadateDate에대해서 , 최초등록시 값이 들어가는것에 대한 문제 해결해야함 .


사진을 첨부하지않았을경우에 파일삭제로직에서 에러남 .





