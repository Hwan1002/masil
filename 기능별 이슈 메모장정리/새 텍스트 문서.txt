

User API 개발중 있었던 이슈/해결

SignUp
1. signUp 데이터 검증
초기계획 : 아이디 중복확인 (중복체크 클릭시 true/false 반환)
수정 : 중복 확인 성공 시 메시지와 상태 코드를 반환, 모든 반환은 responseDTO객체로 상태코드와 성공메세지로 반환하게끔 수정
중복확인시 중복된 아이디일경우 예외클래스에 생성자를통해 예외를던져 UserController가아닌 전역예외처리핸들러(GlobalExceptionHandler)를 통한 처리
이메일 인증 추가 
인증번호 전송: 난수를 생성해 이메일로 전송.(JavaMailSender 사용 , SMTP 서버설정 추가 (Gmail) )
<이메일, 인증번호> 및 <인증번호, 유효시간>을 ConcurrentHashMap 에 저장 (데이터베이스 미사용 , 서버메모리 활용 ).
인증번호 확인: 이메일과 인증번호가 일치하는지 검증 , 유효시간 초과 시 데이터 삭제(스케줄러를 작성하여 메모리 누수를 방지) 및 예외 처리(전역핸들러).


2. signUp 데이터전송
초기계획 : @RequestParam으로 사진파일과 회원데이터를 파라미터로 받음
수정 : @RequestPart 를 사용해 Json객체와 사진파일(프로필사진)을 동시에 body에 포함하여 전송.
헤더에 Content-Type : multipart/form-data 명시 .
서버에서 클라이언트가 지정한 프로필사진이 없을경우 기본프로필사진을 설정하는 로직추가 .
파일저장구조 : 공통 패키지에 FileuploadUtil 클래스 생성 . (게시글 사진을 업로드할때에 공통적으로 사용할 클래스)
사진저장 디렉토리 분리 (사진 디레토리속 sub디렉토리 분리 )
- 프로필사진 : /uploads/profile_photos/
- 게시판사진 : /uplodas/board_photos/ 	//  (추후에 게시글에 추가될 사진 저장경로) 


Login/ID/PW 찾기 
1. Login 데이터 검증
초기계획 : 로그인성공시 access토큰 발급 로그인 실패시 아이디와 비밀번호를 확인해주세요 메세지전송  . ID/PW 찾기
수정 : 아이디 불일치 시: "아이디가 일치하지 않습니다."
비밀번호 불일치 시: "비밀번호가 일치하지 않습니다."
JWT 토큰 인증 시스템
AccessToken과 RefreshToken 생성 및 관리.
HTTP Only 쿠키를 사용해 보안 강화 (HTTPS 환경 권장).



5. 비밀번호 찾기
이메일 인증 로직 재사용:
이메일로 인증번호 전송 및 검증.
비밀번호 재설정:
인증 성공 후 새로운 비밀번호를 설정하는 API 제공.


6. 마이페이지 기능
회원 정보 조회 및 게시물 확인 버튼 추가.
프로필 사진과 닉네임 변경 가능.
비밀번호 변경 시 기존 비밀번호 확인 후 변경 페이지 렌더링.


7. 전역 예외 처리 핸들러
공통 예외 처리를 위한 클래스 작성 완료.
각 예외 상황에 맞는 메시지와 HTTP 상태 코드를 반환하도록 구현.
추후 공통된 부분을 한 메서드로 묶어 리팩토링 예정.


8. 소셜 로그인
계획
소셜 로그인 성공 시 회원가입 API와 연동될 응답 데이터 설계 필요.
JWT 토큰 발급과 함께 소셜 로그인 사용자 관리를 위한 로직 추가 예정.


9. HTTPS 도입 (선택 사항)
이슈
HTTPS 환경에서 HTTP Only 쿠키 사용 권장.
사설 인증서 발급 및 로컬 환경에서 신뢰된 인증서를 생성하는 과정 복잡.
해결 방안 (추후 작업 예정)
로컬 환경에서 신뢰된 인증서 생성 및 적용 방법 연구.
HTTPS 서버 설정 완료 후 테스트 환경 구축.


10. 기타 개선 사항
문서화 필요성
작업 내용을 체계적으로 기록하기 위해 기능별 문서화 진행 필요.
문제 정의, 해결 과정, 결과를 명확히 기술.
팀 협업 시 참고할 수 있는 중앙화된 문서 작성 고려.

